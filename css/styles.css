:root {
  --color_primary: rgb(123, 6, 123); /*When hovering over project card*/
  --color_secondary: rgb(178, 11, 158);
  --color_accent: rgb(255, 72, 0);
  --color_headings: rgb(114, 11, 114);
  --color_body: rgb(206, 143, 206);
  --color_body_darker: rgb(169, 83, 169);
  --color_border: #ccc;
  --border-radius: 30px;
}

/* Universal selector, sets box-sizing so that padding/border pixels are part of defined width/height */
/* This is so we don't get 110% box (due to padding) when we only set width to be 100% */
*,
*::after,
*::before {
  box-sizing: border-box;
}

/* Typography */

html {
  font-size: 62.5%;
}

body {
  color: var(--color_body);
  font-family: Inter, Arial, Helvetica, sans-serif;
  font-size: 2rem;
  line-height: 1.5; /* 1.5 times font size */
}

h1,
h2,
h3 {
  color: var(--color_headings);
  margin-bottom: 1rem;
  line-height: 1.1;
}

h1 {
  font-size: 7rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3rem;
}

p {
  margin-top: 0;
}

@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }

  h1 {
    font-size: 8rem;
  }

  h3 {
    font-size: 2rem;
  }
}

/* Links */
a {
  text-decoration: none;
}

.link-arrow {
  color: var(--color_accent);
  font-size: 2rem;
  font-weight: bold;
  text-transform: uppercase;
}

.link-arrow::after {
  content: "-->";
  margin-left: 5px;
  transition: margin 0.15s;
}

.link-arrow:hover::after {
  /*Arrow move right when hover over link*/
  margin-left: 10px;
}

@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/* Badges */
/* Utilization of Object Oriented CSS allow free combinations of badge color/size */

/* Structure of a badge */
.badge {
  border-radius: 20px;
  font-size: 2rem;
  font-weight: 600;
  padding: 0.5rem 2rem;
  white-space: nowrap; /* Badge doesn't wrap to a new line */
}

/* Badge color/size variations */
.badge--primary {
  background: var(--color_primary);
  color: white;
}

.badge--secondary {
  background: var(--color_secondary);
  color: white;
}

.badge--small {
  font-size: 1.6rem;
  padding: 0.5rem 1.5rem;
}

@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }

  .badge--small {
    font-size: 1.2rem;
  }
}

/* Lists */

.list {
  list-style: none;
  padding-left: 0;
  color: var(--color_headings);
}

/* For each list item under a inline list */
.list--inline .list__item {
  display: inline-block;
  margin-right: 2rem;
}

.list--tick {
  list-style-image: url(../Images/tick.svg);
  padding-left: 3rem;
}

/* For a tick list, add some padding between the tick and item */
.list--tick .list__item {
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
  .list--tick .list__item {
    padding-left: 0;
  }
}

/* Icons */

.icon {
  width: 40px;
  height: 40px;
}

.icon--small {
  width: 30px;
  height: 30px;
}

.icon--primary {
  fill: var(--color_primary);
}

.icon--white {
  fill: white;
}

.icon-container {
  background: #f3f9fa;
  width: 64px;
  height: 64px;
  border-radius: 100%;
  display: inline-flex; /* Make span element take into account width and height, and positions items in container */
  justify-content: center;
  align-items: center;
}

.icon-container--accent {
  background: var(--color_accent);
}

/* Buttons */

.button {
  border-radius: 40px;
  border: 0;
  cursor: pointer;
  font-size: 1.8rem;
  font-weight: 600;
  margin: 1rem 0;
  outline: 0;
  padding: 2rem 3rem;
  text-align: center;
  text-transform: uppercase;
  white-space: nowrap; /* Text in button won't wrap to new line */
}

/* If we have an icon inside a button */
.button .icon {
  width: 2rem;
  height: 2rem;
  margin-right: 1rem;
  vertical-align: middle;
}

.button--primary {
  background: var(--color_primary);
  color: white;
}

.button--primary:hover {
  background: rgb(135, 18, 135);
}

.button--secondary {
  background: var(--color_secondary);
  color: white;
}

.button--secondary:hover {
  background: rgb(175, 36, 159);
}

.button--accent {
  background: var(--color_accent);
  color: white;
}

.button--accent:hover {
  background: rgb(255, 86, 19);
}

.button--outline {
  background: white;
  color: var(--color_headings);
  border: 2px solid var(--color_headings);
}

.button--outline:hover {
  background: var(--color_headings);
  color: white;
}

.button--stretched {
  padding-left: 6rem;
  padding-right: 6rem;
}

/* This button takes up entire width of its parent element */
.button--block {
  width: 100%;
  display: inline-block; /* anchor elements are inline by default, this is to make width work */
}

@media screen and (min-width: 1024px) {
  .button {
    font-size: 1.5rem;
  }
}

/* Inputs */

.input {
  border-radius: var(--border-radius);
  border: 1px solid var(--color_border);
  color: var(--color_headings); /* Input text color */
  font-size: 2rem;
  outline: 0;
  padding: 1.5rem 3.5rem;
}

/* Selects all placeholders in inputs */
::placeholder {
  color: #cdcbd7;
}

/* Groups an input with something else (E.g., button, icon) */
.input-group {
  border: 1px solid var(--color_border);
  border-radius: var(--border-radius);
  display: flex; /* To use flex-grow below */
}

/* Input inside a input-group shouldn't have a border */
/* Reduces space padding between input and button/icon */
.input-group .input {
  border: 0;
  flex-grow: 1; /* Grow to take up entire available space in main (horizontal) axis */
  padding: 1.5rem 2rem;
}

/* Button inside an input-group should have less margin (1rem originally) */
.input-group .button {
  margin: 4px;
}

@media screen and (min-width: 1024px) {
  .input {
    font-size: 1.5rem;
  }
}

/* Cards */

.card {
  border-radius: 7px;
  box-shadow: 0 0 20px 10px #f3f3f3;
  overflow: hidden; /* Setting background color down below fills the entire header, so we hides overflow to keep border-radius */
}

.card__header,
.card__body {
  padding: 2rem 3rem;
}

/* Card with primary color header */
.card--primary .card__header {
  background: var(--color_primary);
  color: white;
}

.card--secondary .card__header {
  background: var(--color_secondary);
  color: white;
}

/* Both using the secondary color, so change badge color to make it stand out */
.card--secondary .badge--secondary {
  background: rgb(148, 10, 132);
}

.card--primary .badge--primary {
  background: rgb(101, 5, 101);
}

/* Plans */

.plan {
  transition: transform 0.2s ease-out;
}

.plan__name {
  color: white;
  margin: 0 0 0.5rem 0;
  font-weight: 500;
  font-size: 2rem;
}

.plan__price {
  font-size: 6rem;
}

.plan__billing-cycle {
  font-size: 2.4rem;
  font-weight: 300;
  opacity: 0.8;
  margin-right: 1rem;
}

.plan__description {
  font-size: 1.8rem;
  font-weight: 300;
  letter-spacing: 1px;
  display: block;
}

.plan .list__item {
  margin-bottom: 2rem;
}

.plan--popular {
  transform: scale(1.1);
}

.plan--popular .card__header {
  position: relative; /* Parent of what's down below, set to make absolute positioning work */
}

/* For a popular plan, insert popular img before card header */
.plan--popular .card__header::before {
  content: url(../images/popular.svg);
  width: 40px;
  display: inline-block;
  position: absolute;
  top: -5px;
  right: 5%;
}

.plan:hover {
  transform: scale(1.05);
}

.plan--popular:hover {
  transform: scale(1.15);
}

@media screen and (min-width: 1024px) {
  .plan__name {
    font-size: 1.4rem;
  }

  .plan__price {
    font-size: 5rem;
  }

  .plan__billing-cycle {
    font-size: 1.6rem;
  }

  .plan__description {
    font-size: 1.7rem;
  }
}

/* Media */

/* items within container now best fill available space (inline) because flex-wrap is nowrap by default */
.media {
  display: flex;
}

/* Removes the margin sset by h3 */
.media__title {
  margin-top: 0;
}

.media__body {
  margin: 0 2rem;
}

.media__image {
  margin-top: 1rem;
}

/* Quotes */

.quote {
  font-size: 3rem;
  font-style: italic;
  color: var(--color_body_darker);
  line-height: 1.3;
}

.quote__text::before {
  content: open-quote;
}

.quote__text::after {
  content: close-quote;
}

.quote__author {
  font-size: 3rem;
  font-weight: 500;
  font-style: normal;
  margin-bottom: 0;
}

.quote__organization {
  color: var(--color_headings);
  opacity: 0.4;
  font-size: 2rem;
  font-style: normal;
}

/* Image in the svg container gets positioned relatively, no other elements affected */
.quote__line {
  position: relative;
  bottom: 10px;
}

@media screen and (min-width: 1024px) {
  .quote {
    font-size: 2rem;
  }

  .quote__author {
    font-size: 2.4rem;
  }

  .quote__organization {
    font-size: 1.6rem;
  }
}

/* Grids */

/* Single column grid for mobile */
.grid {
  display: grid;
}

/* 2 column grid for tablets and bigger */
@media screen and (min-width: 768px) {
  .grid--1x2 {
    grid-template-columns: 1fr 1fr;
  }
}

@media screen and (min-width: 1024px) {
  .grid--1x3 {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* Testimonials */

.testimonial {
  padding: 3rem;
}

.testimonial__image {
  position: relative;
}

.testimonial__image > img {
  width: 100%; /* Takes up entire width of the cell, because image has width/height */
}

.testimonial__image > .icon-container {
  position: absolute;
  top: 3rem;
  right: -32px;
}

@media screen and (min-width: 768px) {
  .testimonial .quote,
  .testimonial .quote__author {
    font-size: 2.4rem;
  }

  .testimonial .quote {
    margin-left: 6rem;
  }
}

@media screen and (max-width: 768px) {
  .testimonial .icon-container {
    margin-right: 5px;
  }
}

/* Callouts */

.callout {
  padding: 4rem;
  border-radius: 5px;
}

.callout--primary {
  background: var(--color_primary);
  color: white;
}

.callout__heading {
  color: white;
  margin-top: 0;
  font-size: 3rem;
}

.callout .button {
  align-self: center;
  justify-self: center;
}

.callout__content {
  text-align: center;
}

@media screen and (min-width: 768px) {
  /* Wider screens layout change from each section taking half of the page
   to button take just enough space (auto) and content take all left available */
  .callout .grid--1x2 {
    grid-template-columns: 1fr auto;
  }

  .callout__content {
    text-align: left;
  }

  .callout .button {
    justify-self: start;
    margin: 0 2rem;
  }
}

/* Collapsibles */

.collapsible__header {
  display: flex;
  justify-content: space-between;
}

.collapsible__heading {
  margin-top: 0;
  font-size: 3rem;
}

.collapsible__chevron {
  transform: rotate(-90deg);
  transition: transform 0.3s;
}

.collapsible__content {
  max-height: 0; /* Not using display: none to make transition work */
  overflow: hidden;
  opacity: 0;
  transition: all 0.3s; /* Animating both max-height and opacity */
}

/* Chevron points down when collapsible is expanded */
.collapsible--expanded .collapsible__chevron {
  transform: rotate(0);
}

/* Content gets displayed when collapsible is expanded */
.collapsible--expanded .collapsible__content {
  max-height: 100vh;
  opacity: 1;
}

/* Blocks */

.block {
  --padding-vertical: 6rem; /* Defined as a variable so padding bottom for skewed block updates automatically */
  padding: var(--padding-vertical) 2rem;
}

.block__header {
  text-align: center;
}

.block__heading {
  margin-top: 0;
}

.block--dark {
  background: #000;
  color: #7b858b;
}

.block--dark .block__heading {
  color: white;
}

/* Clips the element we apply it to */
.block--skewed-right {
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 90%);
  padding-bottom: calc(var(--padding-vertical) + 2rem);
}

.block--skewed-left {
  clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
  padding-bottom: calc(var(--padding-vertical) + 2rem);
}

/* Restriction on how big one block can get so content format stay the same */
.container {
  max-width: 1140px;
  margin: 0 auto; /* Block is always centered on the screen */
}

/* Navigation Bar */

.nav {
  background: #000;
  display: flex;
  flex-wrap: wrap; /* Flex is nowrap (squeeze on the same line) by default */
  justify-content: space-between;
  padding: 1rem;
  align-items: center;
}

/* Nav list is now on a new line with flex-wrap: wrap */
.nav__list {
  width: 100%;
  margin: 0;
}

.nav__item {
  padding: 0.5rem 2rem;
  border-bottom: 2px solid #222;
}

/* Anchor has its own color so we have to change the anchor color */
.nav__item > a {
  color: rgb(233, 230, 230);
  transition: color 0.3s; /* transition for hovering over list items */
}

.nav__item > a:hover {
  color: #fff;
}

.nav__toggler {
  opacity: 0.5;
  transition: box-shadow 0.15s;
  cursor: pointer;
}

/* Collapsible--expanded gets toggled when collapsible gets clicked */
/* Change icon opacity when have both nav and collapsible--expanded */
.nav.collapsible--expanded .nav__toggler {
  opacity: 1;
  box-shadow: 0 0 0 3px #666;
  border-radius: 5px;
}

.nav__logo {
  transform: translateY(3px);
}

.nav__item-top {
  padding-top: 1rem;
}

@media screen and (min-width: 768px) {
  .nav__toggler {
    display: none;
  }

  .nav__list {
    width: auto;
    display: flex;
    font-size: 1.6rem;
    max-height: 100%;
    opacity: 1;
  }

  .nav__item {
    border-bottom: none;
  }

  .nav__item-top {
    padding-top: 0.5rem;
  }
}

/* Hero */

.hero__tagline {
  font-size: 2rem;
  color: #b9c3cf;
  letter-spacing: 1px;
  padding-bottom: 2rem;
}

.hero__image {
  width: 100%;
  margin-top: 5rem;
}

@media screen and (min-width: 768px) {
  .hero__image {
    margin-top: 0;
  }

  .hero__content {
    text-align: left;
    align-self: center; /* Align content vertically in the center of grid */
  }

  .hero {
    margin-top: 0;
  }
}

/* Search Block */
.block-search .input-group {
  box-shadow: 0 0 30px 20px #e6ebee;
  border: 0;
  margin: 4rem auto;
  max-width: 670px;
}

.block-search__samples {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 6rem);
  font-size: 2rem;
  font-weight: 600;
  justify-items: center;
  max-width: 700px;
  margin: 0 auto; /* horizontal margin set to auto centers the element */
}

@media screen and (min-width: 768px) {
  .block-search__samples {
    grid-template-columns: repeat(
      auto-fit,
      minmax(10rem, 1fr)
    ); /* auto-fit will adjust number of columns with # of list items */
    /* Each list item will take minimally 10rem, and max 1 fraction (entire width) */
  }
}

/* Plans Block */

.block-plans .grid {
  gap: 8rem 4rem;
}

/* So cards doesn't stretch which is ugly */
.block-plans .card {
  max-width: 500px;
  margin: 0 auto;
  box-shadow: 0 0 8px 10px #f3f3f3;
}

/* Features */

.feature {
  gap: 4rem 2rem;
  margin: 12rem;
}

.feature:first-of-type {
  margin-top: 6rem;
}

.feature__heading {
  margin: 1rem 0;
}

.feature__image {
  width: 100%;
}

.feature__header {
  font-style: italic;
  font-weight: 900;
  font-size: 4.5rem;
}

@media screen and (min-width: 768px) {
  .feature:nth-of-type(even) .feature__content {
    order: 2; /* Every other feature has grids content and image swapped */
  }
}

@media screen and (min-width: 1024px) {
  .feature__header {
    font-size: 3rem;
  }
}
